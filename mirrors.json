{
    "command": "Fort mirror configuration",
    "version": "1.0",
    "defaults": {
        "user": "fort",
        "cwd": "/home/fort",
        "port": 80,
        "create-dns-entry": true,
        "vhost-template": "apache.conf"
    },
    "mirrors": [
        {
            "id": "pypi-mirror",
            "params": {
                "hostname": "pypi.fort",
                "docroot": "/srv/pypi",
                "client-uri": "http://pypi.fort/web/simple"
            },
            "templates": [
                "bandersnatch.conf"
            ],
            "steps": [
                "python3 -m venv .bandersnatch.venv",
                ".bandersnatch.venv/bin/pip install bandersnatch",
                ".bandersnatch.venv/bin/bandersnatch -c /tmp/mirror-templates/pypi-mirror/bandersnatch.conf mirror"
            ]
        },
        {
            "id": "apt-mirror",
            "params": {
                "hostname": "apt.fort",
                "docroot": "/srv/apt",
                "remote": "http://archive.ubuntu.com/ubuntu",
                "release": "bionic",
                "architecture": "amd64",
                "client-uri": "http://apt.fort/"
            },
            "templates": [
                "mirror.list"
            ],
            "steps": [
                "apt-mirror /tmp/mirror-templates/apt-mirror/mirror.list"
            ]
        },
        {
            "id": "git-mirror",
            "params": {
                "hostname": "source.fort",
                "docroot": "/src/source"
            },
            "templates": [
                "git-mirror.conf"
            ],
            "steps": [
                "python3 -m venv .gitmirror.venv",
                ".gitmirror.venv/bin/pip install PyGithub==1.43.7",
                ".gitmirror.venv/bin/python3 gitmirror.py /tmp/mirror-templates/git-mirror/gitmirror.conf"
            ]
        },
        {
            "id": "content-mirror",
            "params": {
                "hostname": "content.fort",
                "docroot": "/srv/content",
                "cwd": "/srv/content"
            },
            "steps": [
                "rsync --recursive ftp.rfc-editor.org::rfcs-text-only /srv/content/RFCs",
                "rsync --recursive ftp.rfc-editor.org::ids-text-only /srv/content/IDs",
                "wget -N --no-check-certificate -D datasets.imdbws.com,www.imdb.com -r -l 1 https://datasets.imdbws.com/",
                "wget -N --no-check-certificate https://dumps.wikimedia.org/enwiki/20190401/enwiki-20190401-pages-meta-current.xml.bz2",
                "wget -N --no-check-certificate http://download.geonames.org/export/dump/allCountries.zip",
                "wget -N --no-check-certificate http://download.geonames.org/export/dump/cities1000.zip",
                "wget -N --no-check-certificate http://download.geonames.org/export/dump/alternateNames.zip",
                "wget -N --no-check-certificate http://download.geonames.org/export/dump/iso-languagecodes.txt",
                "wget -N --no-check-certificate http://download.geonames.org/export/dump/timeZones.txt",
                "wget -N --no-check-certificate http://download.geonames.org/export/dump/countryInfo.txt",
                "wget -N --no-check-certificate https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz",
                "wget -N --no-check-certificate https://geolite.maxmind.com/download/geoip/database/GeoLite2-City-CSV.zip",
                "wget -N --no-check-certificate https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz",
                "wget -N --no-check-certificate https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country-CSV.zip",
                "wget -N --no-check-certificate https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz",
                "wget -N --no-check-certificate https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN-CSV.zip"
            ]
        },
        {
            "id": "dockerhub-mirror",
            "steps": [
                "FIXME docker has a mirroring approach"
            ]
        }
    ]
}
